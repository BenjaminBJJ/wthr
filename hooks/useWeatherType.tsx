import { useMemo } from "react";

type WeatherResult = {
	label: string; // "–°–æ–ª–Ω–µ—á–Ω–æ", "–ü–∞—Å–º—É—Ä–Ω–æ" –∏ —Ç.–¥.
	icon: string; // üü° –∏–ª–∏ –∫–ª—é—á "sunny", –µ—Å–ª–∏ —Ö–æ—á–µ—à—å SVG/Lottie
};

export const useWeatherType = (
	weatherCode?: number,
	precipitation?: number,
	cloudcover?: number
): WeatherResult =>
	useMemo(() => {
		if (weatherCode == null) return { label: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", icon: "‚ùî" };

		const w = weatherCode;
		const cloudy = cloudcover && cloudcover > 60;
		const wet = precipitation && precipitation > 0.1;

		let label = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
		let icon = "‚ùî";

		if (w === 0) {
			label = "–°–æ–ª–Ω–µ—á–Ω–æ";
			icon = "clear-day.svg";
		} else if ([1, 2].includes(w)) {
			label = "–Ø—Å–Ω–æ";
			icon = "overcast-day.svg";
		} else if ([3].includes(w)) {
			label = "–ü–∞—Å–º—É—Ä–Ω–æ";
			icon = "cloudy.svg";
		} else if ([45, 48].includes(w)) {
			label = "–¢—É–º–∞–Ω";
			icon = "mist.svg";
		} else if ([51, 53, 55, 61, 63, 65, 80, 81, 82].includes(w)) {
			label = "–î–æ–∂–¥—å";
			icon = "rain.svg";
		} else if ([66, 67].includes(w)) {
			label = "–î–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º";
			icon = "sleet.svg";
		} else if ([71, 73, 75, 77, 85, 86].includes(w)) {
			label = "–°–Ω–µ–≥";
			icon = "snow.svg";
		} else if ([95, 96, 99].includes(w)) {
			label = "–ì—Ä–æ–∑–∞";
			icon = "thunderstorms-rain.svg";
		}

		// --- –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
		if (["–°–æ–ª–Ω–µ—á–Ω–æ", "–Ø—Å–Ω–æ"].includes(label) && wet) {
			label = "–°–æ–ª–Ω–µ—á–Ω–æ —Å –æ—Å–∞–¥–∫–∞–º–∏";
			icon = "partly-cloudy-day-rain.svg";
		} else if (cloudy && label === "–°–æ–ª–Ω–µ—á–Ω–æ") {
			label = "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å";
			icon = "partly-cloudy-day.svg";
		} else if (cloudy && wet && label === "–ü–∞—Å–º—É—Ä–Ω–æ") {
			label = "–ü–∞—Å–º—É—Ä–Ω–æ, –¥–æ–∂–¥—å";
			icon = "rain.svg";
		}

		return { label, icon };
	}, [weatherCode, precipitation, cloudcover]);
